-- Transportation and Accommodation Tables for Vakay Trip Planner

-- 1. ACCOMMODATION TABLE
-- Stores accommodation details for trips
CREATE TABLE accommodations (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  trip_id uuid REFERENCES trips(id) ON DELETE CASCADE NOT NULL,
  name text NOT NULL,
  address text NOT NULL,
  latitude decimal(10,7),
  longitude decimal(10,7),
  check_in_date date NOT NULL,
  check_in_time time,
  check_out_date date NOT NULL,
  check_out_time time,
  booking_confirmation text,
  booking_url text,
  contact_phone text,
  notes text,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Enable Row Level Security
ALTER TABLE accommodations ENABLE ROW LEVEL SECURITY;

-- 2. TRANSPORTATION TABLE
-- Stores transportation details for trips
CREATE TABLE transportation (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  trip_id uuid REFERENCES trips(id) ON DELETE CASCADE NOT NULL,
  type text NOT NULL CHECK (type IN ('flight', 'train', 'bus', 'car_rental', 'ferry', 'other')),
  provider text NOT NULL, -- airline, train company, etc.
  booking_reference text,
  departure_location text NOT NULL,
  departure_date date NOT NULL,
  departure_time time,
  arrival_location text NOT NULL,
  arrival_date date NOT NULL,
  arrival_time time,
  -- Flight specific fields
  flight_number text,
  terminal text,
  gate text,
  seat text,
  -- Train/Bus specific fields
  vehicle_number text,
  carriage_coach text,
  -- Car rental specific fields
  pickup_location text,
  dropoff_location text,
  -- General fields
  notes text,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- Enable Row Level Security
ALTER TABLE transportation ENABLE ROW LEVEL SECURITY;

-- 3. Create indexes for better performance
CREATE INDEX idx_accommodations_trip_id ON accommodations(trip_id);
CREATE INDEX idx_accommodations_dates ON accommodations(check_in_date, check_out_date);
CREATE INDEX idx_transportation_trip_id ON transportation(trip_id);
CREATE INDEX idx_transportation_dates ON transportation(departure_date, arrival_date);
CREATE INDEX idx_transportation_type ON transportation(type);

-- 4. Add RLS policies for accommodations
CREATE POLICY "Users can view accommodations for trips they participate in" ON accommodations
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = accommodations.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can insert accommodations for trips they participate in" ON accommodations
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = accommodations.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can update accommodations for trips they participate in" ON accommodations
  FOR UPDATE USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = accommodations.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can delete accommodations for trips they participate in" ON accommodations
  FOR DELETE USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = accommodations.trip_id
      AND tp.user_id = auth.uid()
    )
  );

-- 5. Add RLS policies for transportation
CREATE POLICY "Users can view transportation for trips they participate in" ON transportation
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = transportation.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can insert transportation for trips they participate in" ON transportation
  FOR INSERT WITH CHECK (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = transportation.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can update transportation for trips they participate in" ON transportation
  FOR UPDATE USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = transportation.trip_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can delete transportation for trips they participate in" ON transportation
  FOR DELETE USING (
    EXISTS (
      SELECT 1 FROM trip_participants tp
      WHERE tp.trip_id = transportation.trip_id
      AND tp.user_id = auth.uid()
    )
  );

-- 6. PARTICIPANTS LINK TABLES FOR ACCOMMODATION AND TRANSPORTATION
-- These tables store which participants are associated with a given accommodation/transportation

CREATE TABLE IF NOT EXISTS accommodation_participants (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  accommodation_id bigint REFERENCES accommodations(id) ON DELETE CASCADE NOT NULL,
  participant_user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  created_at timestamptz DEFAULT now(),
  UNIQUE(accommodation_id, participant_user_id)
);

ALTER TABLE accommodation_participants ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view accommodation participants for trips they participate in" ON accommodation_participants
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM accommodations a
      JOIN trip_participants tp ON a.trip_id = tp.trip_id
      WHERE a.id = accommodation_participants.accommodation_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can manage accommodation participants for their trips" ON accommodation_participants
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM accommodations a
      JOIN trip_participants tp ON a.trip_id = tp.trip_id
      WHERE a.id = accommodation_participants.accommodation_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE TABLE IF NOT EXISTS transportation_participants (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  transportation_id bigint REFERENCES transportation(id) ON DELETE CASCADE NOT NULL,
  participant_user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  created_at timestamptz DEFAULT now(),
  UNIQUE(transportation_id, participant_user_id)
);

ALTER TABLE transportation_participants ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Users can view transportation participants for trips they participate in" ON transportation_participants
  FOR SELECT USING (
    EXISTS (
      SELECT 1 FROM transportation t
      JOIN trip_participants tp ON t.trip_id = tp.trip_id
      WHERE t.id = transportation_participants.transportation_id
      AND tp.user_id = auth.uid()
    )
  );

CREATE POLICY "Users can manage transportation participants for their trips" ON transportation_participants
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM transportation t
      JOIN trip_participants tp ON t.trip_id = tp.trip_id
      WHERE t.id = transportation_participants.transportation_id
      AND tp.user_id = auth.uid()
    )
  );

-- 7. Link expenses to accommodations for cascade deletion and deep integration
ALTER TABLE IF EXISTS expenses
  ADD COLUMN IF NOT EXISTS accommodation_id bigint REFERENCES accommodations(id) ON DELETE CASCADE;

CREATE INDEX IF NOT EXISTS idx_expenses_accommodation_id ON expenses(accommodation_id);

-- Backfill/alter for existing deployments
ALTER TABLE IF EXISTS accommodations
  ADD COLUMN IF NOT EXISTS latitude decimal(10,7),
  ADD COLUMN IF NOT EXISTS longitude decimal(10,7);

CREATE INDEX IF NOT EXISTS idx_accommodations_lat_lon ON accommodations(latitude, longitude);