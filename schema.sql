-- 1. TRIPS TABLE
-- Stores the core information about each trip.
CREATE TABLE trips (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  created_at timestamptz DEFAULT now(),
  name text NOT NULL,
  destination text,
  start_date date,
  end_date date
);
-- Enable Row Level Security (RLS)
ALTER TABLE trips ENABLE ROW LEVEL SECURITY;


-- 2. LOCATIONS TABLE
-- Stores locations for a trip and their associated colors.
CREATE TABLE locations (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  trip_id uuid REFERENCES trips(id) ON DELETE CASCADE,
  name text NOT NULL,
  color text NOT NULL,
  description text
);
-- Enable Row Level Security
ALTER TABLE locations ENABLE ROW LEVEL SECURITY;


-- 3. ITINERARY_DAYS TABLE
-- Stores the details for each day of the trip.
CREATE TABLE itinerary_days (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  trip_id uuid REFERENCES trips(id) ON DELETE CASCADE NOT NULL,
  date date NOT NULL,
  notes text,
  summary text,
  location_1_id bigint REFERENCES locations(id) ON DELETE SET NULL,
  location_2_id bigint REFERENCES locations(id) ON DELETE SET NULL,
  -- Ensure that there's only one itinerary entry per day for any given trip
  UNIQUE (trip_id, date)
);
-- Enable Row Level Security
ALTER TABLE itinerary_days ENABLE ROW LEVEL SECURITY;


-- 4. TRIP_PARTICIPANTS TABLE
-- Links users to trips and defines their role.
CREATE TYPE trip_role AS ENUM ('admin', 'traveler');

CREATE TABLE trip_participants (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  trip_id uuid REFERENCES trips(id) ON DELETE CASCADE NOT NULL,
  user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  role trip_role NOT NULL DEFAULT 'traveler',
  created_at timestamptz DEFAULT now(),
  -- Ensure a user can only be on a trip once
  UNIQUE (trip_id, user_id)
);
-- Enable Row Level Security
ALTER TABLE trip_participants ENABLE ROW LEVEL SECURITY;

ALTER TABLE public.profiles
ADD COLUMN has_set_password BOOLEAN DEFAULT FALSE;
